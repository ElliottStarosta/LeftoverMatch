rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Posts are readable by authenticated users, writable by owner
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Claims are readable by claimer and poster, writable only through Cloud Functions
    match /claims/{claimId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.claimerId || request.auth.uid == resource.data.posterId);
      allow create, update, delete: if false; // Only allow through Cloud Functions
    }
    
    // Chats are readable/writable by participants
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // Messages are readable/writable by chat participants
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // Ratings are readable by anyone, writable by authenticated users
    match /ratings/{ratingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.claimerId;
      allow update, delete: if false; // Prevent modification
    }
    
    // Reports are readable by admins, writable by authenticated users
    match /reports/{reportId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null;
      allow update, delete: if false;
    }
    
    // Notifications are readable/writable by the user they belong to
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
  }
}
